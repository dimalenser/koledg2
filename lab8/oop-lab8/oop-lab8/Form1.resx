<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QDcRXhpZgAATU0AKgAAAAgAAwE7AAIAAAAgAAAAModpAAQAAAAB
        AAAAUpydAAEAAAAiAAAAsgAAAADQlNC40LzQsNGBINCb0Y3QvdGB0Y3RgNC+0LLQuNGHAAAEkAMAAgAA
        ABQAAACIkAQAAgAAABQAAACckpEAAgAAAAMxNwAAkpIAAgAAAAMxNwAAAAAAADIwMTk6MTE6MDYgMTE6
        NTY6MzMAMjAxOToxMTowNiAxMTo1NjozMwAAABQEOAQ8BDAEQQQgABsETQQ9BEEETQRABD4EMgQ4BEcE
        AAD/2wBDAAcFBQYFBAcGBQYIBwcIChELCgkJChUPEAwRGBUaGRgVGBcbHichGx0lHRcYIi4iJSgpKywr
        GiAvMy8qMicqKyr/2wBDAQcICAoJChQLCxQqHBgcKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
        KioqKioqKioqKioqKioqKioqKir/wAARCAB9AJYDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAA
        AAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0Kx
        wRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4
        eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl
        5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQD
        BAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygp
        KjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOk
        paanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIR
        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
        gAooooAKKKKACiiigD//2Q==
</value>
  </data>
</root>